import { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';import { Injectable } from '@angular/core';import { Observable, of } from 'rxjs';import { PersistanceService } from '../services/persistance.service';@Injectable()export class AuthGuard implements CanActivate, CanActivateChild {  constructor(private persistanceService: PersistanceService,              private router: Router) {  }  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {    if (this.persistanceService.isAuthenticated()) {      return of(true)    } else {      this.router.navigate(['/login'], {        queryParams: {          accessDenied: true        }      });      return of(false)    }  };  public canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {    return this.canActivate(route, state)  };}