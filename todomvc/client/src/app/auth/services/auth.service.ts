import { Injectable } from '@angular/core';import { HttpClient } from '@angular/common/http';import { Observable } from 'rxjs';import { tap } from 'rxjs/operators';import { RegisterRequestInterface } from '../types/registerRequest.interface';import { UserInterface } from '../types/User.interface';import { PersistanceService } from '../../shared/services/persistance.service';import { BASE_AUTH_URL } from './auth.config';import { validationMessageInterface } from '../types/ValidationMessage.interface';import { EmailInterface } from '../types/email.interface';@Injectable()export class AuthService {  constructor(    private http: HttpClient,    private persistanceService: PersistanceService  ) {  }  public login(data: RegisterRequestInterface): Observable<UserInterface> {    const url = `${BASE_AUTH_URL}/login`;    return this.http.post<UserInterface>(url, data)      .pipe(        tap(({token}) => {          localStorage.setItem('auth-token', token);          this.persistanceService.setToken(token);        }))  };  public register(data: RegisterRequestInterface): Observable<RegisterRequestInterface> {    const url = `${BASE_AUTH_URL}/register`;    return this.http.post<RegisterRequestInterface>(url, data);  };  public chackUser(email: EmailInterface): Observable<validationMessageInterface> {    const url = `${BASE_AUTH_URL}/chackUser`;    return this.http.post<validationMessageInterface>(url, {email: email})  };}